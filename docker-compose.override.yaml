version: "3.8"

services:
  server:
    container_name: leprechaun_server
    networks:
      client:
        aliases:
          - api.leprechaun.loc
          - media.leprechaun.loc
      api:
    ports:
      - ${WEB_SERVER_PORT}:80
    volumes:
      - image_hosting:/var/www/img:rw
      - ./server/.http_auth:/etc/nginx/.http_auth
    depends_on:
      - api

  db_0:
    container_name: leprechaun_db_0
    networks:
      - api
      - db
    build:
      context: ./db
      dockerfile: Dockerfile
      args:
        - DB_FOLDER=db_0
    ports:
      - ${DB_0_PORT_EXPOSE}:${DB_0_PORT}
    environment:
      - POSTGRES_PASSWORD=${DB_0_PASSWORD}
      - POSTGRES_USER=${DB_0_USER}
      - POSTGRES_DATABASE=${DB_0_DATABASE}

  db_1:
    container_name: leprechaun_db_1
    networks:
      - db
    build:
      context: ./db
      dockerfile: Dockerfile
      args:
        - DB_FOLDER=db_1
    environment:
      - POSTGRES_PASSWORD=${DB_1_PASSWORD}
      - POSTGRES_USER=${DB_1_USER}
      - POSTGRES_DATABASE=${DB_1_DATABASE}
      - MASTER_DB_HOST=${DB_0_HOST}
      - MASTER_DB_USER=${DB_0_USER}
      - MASTER_DB_PASS=${DB_0_PASSWORD}
      - MASTER_DB_NAME=${DB_0_DATABASE}
    depends_on:
      - db_0

  cache:
    container_name: leprechaun_cache
    networks:
      - api
    build:
      context: ./cache
      dockerfile: Dockerfile
      args:
        - REDIS_PASSWORD:${CACHE_PASSWORD}
    ports:
      - ${CACHE_PORT_EXPOSE}:${CACHE_PORT}

  api:
    container_name: leprechaun_api
    networks:
      - api
    environment:
      - HOST_NAME
      - CORS_DOMAINS
      - DOMAIN
      - DOMAIN_ADM
      - APP_NAME
      - LANGS
      - POSTGRES_HOST=${DB_0_HOST}
      - POSTGRES_PORT=${DB_0_PORT}
      - POSTGRES_PASSWORD=${DB_0_PASSWORD}
      - POSTGRES_USER=${DB_0_USER}
      - POSTGRES_DATABASE=${DB_0_DATABASE}
      - SE_HOST
      - SE_PORT
      - SE_USER
      - SE_PASSWORD
      - CACHE_HOST
      - CACHE_PORT_EXPOSE
      - CACHE_PORT
      - CACHE_USER
      - CACHE_PASSWORD
      - CACHE_DB_NUMBER
      - HOSTING_PATH
      - MAIL_SMTP_HOST
      - MAIL_SMTP_PORT
      - MAIL_SENDER_ACCOUNT
      - MAIL_SENDER_PASSWORD
      - DEV_MAIL_RECIEVER
      - SESSION_COOKIE_SECRET
      - SESSION_AGE
      - DASHBOARD_PORTION
      - USER_WISHLIST_LENGTH
      - USER_HISTORY_LENGTH
      - DEFAULT_CACHE_TTL
      - PRODUCT_PUBLIC_IMAGE_AMOUNT
    volumes:
      - image_hosting:/var/www/img:rw
    depends_on:
      - cache
      - db_0
      - se

  client_user:
    container_name: leprechaun_client_user
    networks:
      - client
    environment:
      - APP_NAME
      - LANGS
      - DOMAIN
      - DOMAIN_MEDIA
      - DOMAIN_API
      - CURRENCY_SYMBOL
    depends_on:
      - server

  se:
    container_name: leprechaun_se
    image: docker.elastic.co/elasticsearch/elasticsearch:${SE_VERSION}
    networks:
      - api
      - se
    environment:
      - ES_PORT=${SE_PORT}
      - STACK_VERSION=${SE_VERSION}
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    depends_on:
      - db_0

  se_client:
    container_name: leprechaun_se_client
    image: docker.elastic.co/kibana/kibana:${SE_VERSION}
    networks:
      - api
      - se
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://${SE_HOST}:${SE_PORT}
    depends_on:
      - se

volumes:
  image_hosting:

networks:
  api:
    driver: bridge
    name: leprechaun_api
  db:
    driver: bridge
    name: leprechaun_db
  client:
    driver: bridge
    name: leprechaun_client
  se:
    driver: bridge
    name: leprechaun_se
