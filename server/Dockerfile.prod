### ADMIN CLIENT BUNDLE

FROM node:16.17.1-alpine3.15 AS ADMIN_CLIENT

ARG LANGS
ARG APP_NAME
ARG DOMAIN
ARG DOMAIN_MEDIA
ARG DOMAIN_API

ENV LANGS $LANGS
ENV APP_NAME $APP_NAME
ENV DOMAIN $DOMAIN
ENV DOMAIN_MEDIA $DOMAIN_MEDIA
ENV DOMAIN_API $DOMAIN_API

ENV NODE_OPTIONS=--max_old_space_size=4096

WORKDIR /app

COPY ./admin/package.json ./admin/package-lock.json ./

RUN npm install

# disable Dockerfile caching
ADD "https://www.random.org/cgi-bin/randbyte?nbytes=10&format=h" skipcache

COPY ./admin/. .

RUN npm run build

### NGINX

FROM nginx:1.14

ARG HOSTING_PATH
ARG ADMIN_CLIENT_PATH

RUN rm /etc/nginx/conf.d/default.conf && \
    apt update && \
    apt install -y apache2-utils tree

# nginx-module-image-filter
RUN echo "deb http://nginx.org/packages/mainline/debian/ stretch nginx" >> /etc/apt/sources.list && \
    apt-get install -y wget gnupg2 && \
    wget https://nginx.org/keys/nginx_signing.key && apt-key add nginx_signing.key && \
    apt-get update && apt-get install nginx-module-image-filter -y

# create hosting folders
RUN mkdir -p ${HOSTING_PATH}img/category/ && \
    mkdir -p ${HOSTING_PATH}img/product/ && \
    mkdir -p ${ADMIN_CLIENT_PATH}

# copy admin build folder for hosting
COPY --from=ADMIN_CLIENT /app/dist/* ${ADMIN_CLIENT_PATH}

COPY ./conf/nginx.conf /etc/nginx/
COPY ./conf/leprechaun.conf ./conf/leprechaun.prod.conf /etc/nginx/conf.d/
