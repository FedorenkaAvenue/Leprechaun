// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.24.4
// source: prop_group.proto

package prop_group_v1

import (
	trans "./trans"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PropertyGroupSearchParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PropertyGroupSearchParams) Reset() {
	*x = PropertyGroupSearchParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prop_group_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyGroupSearchParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyGroupSearchParams) ProtoMessage() {}

func (x *PropertyGroupSearchParams) ProtoReflect() protoreflect.Message {
	mi := &file_prop_group_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyGroupSearchParams.ProtoReflect.Descriptor instead.
func (*PropertyGroupSearchParams) Descriptor() ([]byte, []int) {
	return file_prop_group_proto_rawDescGZIP(), []int{0}
}

func (x *PropertyGroupSearchParams) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PropertySearchParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PropertySearchParams) Reset() {
	*x = PropertySearchParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prop_group_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertySearchParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertySearchParams) ProtoMessage() {}

func (x *PropertySearchParams) ProtoReflect() protoreflect.Message {
	mi := &file_prop_group_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertySearchParams.ProtoReflect.Descriptor instead.
func (*PropertySearchParams) Descriptor() ([]byte, []int) {
	return file_prop_group_proto_rawDescGZIP(), []int{1}
}

func (x *PropertySearchParams) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PropertyGroupUpdateParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Data *PropertyGroupCU `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PropertyGroupUpdateParams) Reset() {
	*x = PropertyGroupUpdateParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prop_group_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyGroupUpdateParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyGroupUpdateParams) ProtoMessage() {}

func (x *PropertyGroupUpdateParams) ProtoReflect() protoreflect.Message {
	mi := &file_prop_group_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyGroupUpdateParams.ProtoReflect.Descriptor instead.
func (*PropertyGroupUpdateParams) Descriptor() ([]byte, []int) {
	return file_prop_group_proto_rawDescGZIP(), []int{2}
}

func (x *PropertyGroupUpdateParams) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PropertyGroupUpdateParams) GetData() *PropertyGroupCU {
	if x != nil {
		return x.Data
	}
	return nil
}

type PropertyGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title      *trans.TransData       `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	AltName    string                 `protobuf:"bytes,3,opt,name=altName,proto3" json:"altName,omitempty"`
	IsPrimary  bool                   `protobuf:"varint,4,opt,name=isPrimary,proto3" json:"isPrimary,omitempty"`
	Comment    string                 `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Properties []*Property            `protobuf:"bytes,8,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *PropertyGroup) Reset() {
	*x = PropertyGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prop_group_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyGroup) ProtoMessage() {}

func (x *PropertyGroup) ProtoReflect() protoreflect.Message {
	mi := &file_prop_group_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyGroup.ProtoReflect.Descriptor instead.
func (*PropertyGroup) Descriptor() ([]byte, []int) {
	return file_prop_group_proto_rawDescGZIP(), []int{3}
}

func (x *PropertyGroup) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PropertyGroup) GetTitle() *trans.TransData {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *PropertyGroup) GetAltName() string {
	if x != nil {
		return x.AltName
	}
	return ""
}

func (x *PropertyGroup) GetIsPrimary() bool {
	if x != nil {
		return x.IsPrimary
	}
	return false
}

func (x *PropertyGroup) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *PropertyGroup) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PropertyGroup) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *PropertyGroup) GetProperties() []*Property {
	if x != nil {
		return x.Properties
	}
	return nil
}

type PropertyGroupList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*PropertyGroup `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *PropertyGroupList) Reset() {
	*x = PropertyGroupList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prop_group_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyGroupList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyGroupList) ProtoMessage() {}

func (x *PropertyGroupList) ProtoReflect() protoreflect.Message {
	mi := &file_prop_group_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyGroupList.ProtoReflect.Descriptor instead.
func (*PropertyGroupList) Descriptor() ([]byte, []int) {
	return file_prop_group_proto_rawDescGZIP(), []int{4}
}

func (x *PropertyGroupList) GetItems() []*PropertyGroup {
	if x != nil {
		return x.Items
	}
	return nil
}

type PropertyGroupCU struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title     *trans.TransData `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	AltName   string           `protobuf:"bytes,2,opt,name=altName,proto3" json:"altName,omitempty"`
	IsPrimary bool             `protobuf:"varint,3,opt,name=isPrimary,proto3" json:"isPrimary,omitempty"`
	Comment   string           `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *PropertyGroupCU) Reset() {
	*x = PropertyGroupCU{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prop_group_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyGroupCU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyGroupCU) ProtoMessage() {}

func (x *PropertyGroupCU) ProtoReflect() protoreflect.Message {
	mi := &file_prop_group_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyGroupCU.ProtoReflect.Descriptor instead.
func (*PropertyGroupCU) Descriptor() ([]byte, []int) {
	return file_prop_group_proto_rawDescGZIP(), []int{5}
}

func (x *PropertyGroupCU) GetTitle() *trans.TransData {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *PropertyGroupCU) GetAltName() string {
	if x != nil {
		return x.AltName
	}
	return ""
}

func (x *PropertyGroupCU) GetIsPrimary() bool {
	if x != nil {
		return x.IsPrimary
	}
	return false
}

func (x *PropertyGroupCU) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type Property struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title     *trans.TransData       `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	AltName   string                 `protobuf:"bytes,3,opt,name=altName,proto3" json:"altName,omitempty"`
	Comment   string                 `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Property) Reset() {
	*x = Property{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prop_group_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Property) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Property) ProtoMessage() {}

func (x *Property) ProtoReflect() protoreflect.Message {
	mi := &file_prop_group_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Property.ProtoReflect.Descriptor instead.
func (*Property) Descriptor() ([]byte, []int) {
	return file_prop_group_proto_rawDescGZIP(), []int{6}
}

func (x *Property) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Property) GetTitle() *trans.TransData {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *Property) GetAltName() string {
	if x != nil {
		return x.AltName
	}
	return ""
}

func (x *Property) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Property) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Property) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type PropertyCU struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title         *trans.TransData `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	AltName       string           `protobuf:"bytes,2,opt,name=altName,proto3" json:"altName,omitempty"`
	Comment       string           `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	PropertyGroup int32            `protobuf:"varint,4,opt,name=propertyGroup,proto3" json:"propertyGroup,omitempty"`
}

func (x *PropertyCU) Reset() {
	*x = PropertyCU{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prop_group_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyCU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyCU) ProtoMessage() {}

func (x *PropertyCU) ProtoReflect() protoreflect.Message {
	mi := &file_prop_group_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyCU.ProtoReflect.Descriptor instead.
func (*PropertyCU) Descriptor() ([]byte, []int) {
	return file_prop_group_proto_rawDescGZIP(), []int{7}
}

func (x *PropertyCU) GetTitle() *trans.TransData {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *PropertyCU) GetAltName() string {
	if x != nil {
		return x.AltName
	}
	return ""
}

func (x *PropertyCU) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *PropertyCU) GetPropertyGroup() int32 {
	if x != nil {
		return x.PropertyGroup
	}
	return 0
}

var File_prop_group_proto protoreflect.FileDescriptor

var file_prop_group_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2b, 0x0a, 0x19, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x26, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5c,
	0x0a, 0x19, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x70,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x43, 0x55, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc3, 0x02, 0x0a,
	0x0d, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6c, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x34, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x22, 0x44, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x0f, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x55, 0x12, 0x26, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6c, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x73, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xea, 0x01, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x6c, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6c,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x8e, 0x01, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x43, 0x55, 0x12, 0x26, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6c, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x32, 0xce, 0x02, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x53, 0x0a,
	0x0f, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x4c, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x45, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x55, 0x1a, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x4c, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x9d, 0x01, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x0e, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x43, 0x55, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x0e, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x20, 0x2e, 0x70, 0x72,
	0x6f, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x1c, 0x5a, 0x1a, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x3b, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_prop_group_proto_rawDescOnce sync.Once
	file_prop_group_proto_rawDescData = file_prop_group_proto_rawDesc
)

func file_prop_group_proto_rawDescGZIP() []byte {
	file_prop_group_proto_rawDescOnce.Do(func() {
		file_prop_group_proto_rawDescData = protoimpl.X.CompressGZIP(file_prop_group_proto_rawDescData)
	})
	return file_prop_group_proto_rawDescData
}

var file_prop_group_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_prop_group_proto_goTypes = []interface{}{
	(*PropertyGroupSearchParams)(nil), // 0: prop_group.PropertyGroupSearchParams
	(*PropertySearchParams)(nil),      // 1: prop_group.PropertySearchParams
	(*PropertyGroupUpdateParams)(nil), // 2: prop_group.PropertyGroupUpdateParams
	(*PropertyGroup)(nil),             // 3: prop_group.PropertyGroup
	(*PropertyGroupList)(nil),         // 4: prop_group.PropertyGroupList
	(*PropertyGroupCU)(nil),           // 5: prop_group.PropertyGroupCU
	(*Property)(nil),                  // 6: prop_group.Property
	(*PropertyCU)(nil),                // 7: prop_group.PropertyCU
	(*trans.TransData)(nil),           // 8: trans.TransData
	(*timestamppb.Timestamp)(nil),     // 9: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),             // 10: google.protobuf.Empty
}
var file_prop_group_proto_depIdxs = []int32{
	5,  // 0: prop_group.PropertyGroupUpdateParams.data:type_name -> prop_group.PropertyGroupCU
	8,  // 1: prop_group.PropertyGroup.title:type_name -> trans.TransData
	9,  // 2: prop_group.PropertyGroup.createdAt:type_name -> google.protobuf.Timestamp
	9,  // 3: prop_group.PropertyGroup.updatedAt:type_name -> google.protobuf.Timestamp
	6,  // 4: prop_group.PropertyGroup.properties:type_name -> prop_group.Property
	3,  // 5: prop_group.PropertyGroupList.items:type_name -> prop_group.PropertyGroup
	8,  // 6: prop_group.PropertyGroupCU.title:type_name -> trans.TransData
	8,  // 7: prop_group.Property.title:type_name -> trans.TransData
	9,  // 8: prop_group.Property.createdAt:type_name -> google.protobuf.Timestamp
	9,  // 9: prop_group.Property.updatedAt:type_name -> google.protobuf.Timestamp
	8,  // 10: prop_group.PropertyCU.title:type_name -> trans.TransData
	0,  // 11: prop_group.PropertyGroupService.getGroupPrivate:input_type -> prop_group.PropertyGroupSearchParams
	10, // 12: prop_group.PropertyGroupService.getGroupListPrivate:input_type -> google.protobuf.Empty
	5,  // 13: prop_group.PropertyGroupService.createGroup:input_type -> prop_group.PropertyGroupCU
	2,  // 14: prop_group.PropertyGroupService.updateGroup:input_type -> prop_group.PropertyGroupUpdateParams
	7,  // 15: prop_group.PropertyService.createProperty:input_type -> prop_group.PropertyCU
	1,  // 16: prop_group.PropertyService.deleteProperty:input_type -> prop_group.PropertySearchParams
	3,  // 17: prop_group.PropertyGroupService.getGroupPrivate:output_type -> prop_group.PropertyGroup
	4,  // 18: prop_group.PropertyGroupService.getGroupListPrivate:output_type -> prop_group.PropertyGroupList
	3,  // 19: prop_group.PropertyGroupService.createGroup:output_type -> prop_group.PropertyGroup
	10, // 20: prop_group.PropertyGroupService.updateGroup:output_type -> google.protobuf.Empty
	6,  // 21: prop_group.PropertyService.createProperty:output_type -> prop_group.Property
	10, // 22: prop_group.PropertyService.deleteProperty:output_type -> google.protobuf.Empty
	17, // [17:23] is the sub-list for method output_type
	11, // [11:17] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_prop_group_proto_init() }
func file_prop_group_proto_init() {
	if File_prop_group_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_prop_group_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyGroupSearchParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prop_group_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertySearchParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prop_group_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyGroupUpdateParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prop_group_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prop_group_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyGroupList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prop_group_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyGroupCU); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prop_group_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Property); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prop_group_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyCU); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_prop_group_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_prop_group_proto_goTypes,
		DependencyIndexes: file_prop_group_proto_depIdxs,
		MessageInfos:      file_prop_group_proto_msgTypes,
	}.Build()
	File_prop_group_proto = out.File
	file_prop_group_proto_rawDesc = nil
	file_prop_group_proto_goTypes = nil
	file_prop_group_proto_depIdxs = nil
}
