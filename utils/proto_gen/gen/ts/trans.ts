// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.2
//   protoc               v4.24.4
// source: trans.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";
import { Empty } from "./google/protobuf/empty";

export const protobufPackage = "trans";

export interface TransData {
  en: string;
  ua: string;
  ru: string;
}

export interface Trans {
  id: number;
  data: TransData;
}

export interface TransList {
  items: Trans[];
}

export interface TransMap {
  items: { [key: number]: TransData };
}

export interface TransMap_ItemsEntry {
  key: number;
  value: TransData;
}

export interface TransUpdateParams {
  id: number;
  data: TransData;
}

export interface TransSearchParams {
  id: number;
}

export interface TransListSearchParams {
  ids: number[];
}

export const TRANS_PACKAGE_NAME = "trans";

export interface TransServiceClient {
  getTrans(request: TransSearchParams): Observable<Trans>;

  getTransList(request: TransListSearchParams): Observable<TransList>;

  getTransMap(request: TransListSearchParams): Observable<TransMap>;

  createTrans(request: TransData): Observable<Trans>;

  updateTrans(request: TransUpdateParams): Observable<Empty>;

  deleteTrans(request: TransSearchParams): Observable<Empty>;
}

export interface TransServiceController {
  getTrans(request: TransSearchParams): Promise<Trans> | Observable<Trans> | Trans;

  getTransList(request: TransListSearchParams): Promise<TransList> | Observable<TransList> | TransList;

  getTransMap(request: TransListSearchParams): Promise<TransMap> | Observable<TransMap> | TransMap;

  createTrans(request: TransData): Promise<Trans> | Observable<Trans> | Trans;

  updateTrans(request: TransUpdateParams): void;

  deleteTrans(request: TransSearchParams): void;
}

export function TransServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = [
      "getTrans",
      "getTransList",
      "getTransMap",
      "createTrans",
      "updateTrans",
      "deleteTrans",
    ];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("TransService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("TransService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const TRANS_SERVICE_NAME = "TransService";
