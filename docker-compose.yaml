version: "3.8"

services:
  server:
    restart: unless-stopped
    build:
      context: ./server
      dockerfile: Dockerfile
      args:
        - HOSTING_PATH
    volumes:
      - ./server/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./server/conf/leprechaun.conf:/etc/nginx/conf.d/leprechaun.conf
      - ./server/conf/leprechaun.dev.conf:/etc/nginx/conf.d/leprechaun.dev.conf
    depends_on:
      - client_admin
      - client_user

  db:
    restart: unless-stopped
    volumes:
      - ./db/postgresql.conf:/app/postgresql.conf

  session:
    restart: unless-stopped
    volumes:
      - ./session/redis.conf:/app/redis.conf

  cache:
    restart: unless-stopped
    volumes:
      - ./cache/redis.conf:/app/redis.conf

  api:
    extends:
      file: docker-compose.shared.yaml
      service: node
    command: yarn dev
    volumes:
      - ./api:/app
    environment:
      - IS_DEV=true

  manticore:
    restart: unless-stopped
    ports:
      - ${MANTICORE_PORT}:${MANTICORE_PORT}

  client_user:
    extends:
      file: docker-compose.shared.yaml
      service: node
    command: npm run serve:docker
    volumes:
      - ./clients/user:/app
    environment:
      - IS_DEV=true

  client_user_ssr:
    container_name: leprechaun_client_user_ssr
    extends:
      file: docker-compose.shared.yaml
      service: node
    command: npm run ssr:watch
    volumes:
      - ./clients/user:/app
    environment:
      - IS_DEV=true
      - APP_NAME
      - LANGS
      - DOMAIN
      - DOMAIN_MEDIA
      - DOMAIN_API
      - PORT=80
    depends_on:
      - api

  client_admin:
    container_name: leprechaun_client_admin
    extends:
      file: docker-compose.shared.yaml
      service: node
    volumes:
      - ./clients/admin:/app
    command: npm run serve:docker
    environment:
      - LANGS
      - APP_NAME
      - DOMAIN
      - DOMAIN_API
      - DOMAIN_MEDIA
    depends_on:
      - api
