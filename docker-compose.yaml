services:
  server:
    restart: unless-stopped
    build:
      context: ./server
      dockerfile: Dockerfile
      args:
        - HOSTING_PATH
    volumes:
      - ./server/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./server/conf/leprechaun.conf:/etc/nginx/conf.d/leprechaun.conf
      - ./server/conf/leprechaun.dev.conf:/etc/nginx/conf.d/leprechaun.dev.conf

  db:
    restart: unless-stopped
    volumes:
      - ./db/postgresql.conf:/app/postgresql.conf
      - ./db/pg_hba.conf:/app/pg_hba.conf

  cache:
    restart: unless-stopped
    volumes:
      - ./cache/redis.conf:/app/redis.conf

  api:
    extends:
      file: docker-compose.shared.yaml
      service: node
    restart: unless-stopped
    command: yarn dev
    volumes:
      - ./api:/app
    environment:
      - IS_DEV=true

  client_user:
    extends:
      file: docker-compose.shared.yaml
      service: node
    restart: unless-stopped
    command: npm run serve:docker
    volumes:
      - ./clients/user:/app
    environment:
      - IS_DEV=true

  client_admin:
    container_name: leprechaun_client_admin
    networks:
      - client
    restart: unless-stopped
    extends:
      file: docker-compose.shared.yaml
      service: node
    volumes:
      - ./clients/admin:/app
    command: npm run serve:docker
    environment:
      - LANGS
      - APP_NAME
      - DOMAIN
      - DOMAIN_API
      - DOMAIN_MEDIA
    depends_on:
      - server

  # client_user_ssr:
  #   container_name: leprechaun_client_user_ssr
  #   networks:
  #     - client
  #   restart: unless-stopped
  #   extends:
  #     file: docker-compose.shared.yaml
  #     service: node
  #   command: npm run serve:ssr:docker
  #   volumes:
  #     - ./clients/user:/app
  #   environment:
  #     - IS_DEV=true
  #     - APP_NAME
  #     - LANGS
  #     - DOMAIN
  #     - DOMAIN_MEDIA
  #     - DOMAIN_API
  #     - CURRENCY_SYMBOL
  #   depends_on:
  #     - server

  # client_v2:
  #   container_name: leprechaun_client_v2
  #   extends:
  #     file: docker-compose.shared.yaml
  #     service: node
  #   restart: unless-stopped
  #   command: npm run dev:docker
  #   networks:
  #     - client
  #   volumes:
  #     - ./v2:/app:rw
  #   environment:
  #     - IS_DEV=true
  #     - APP_NAME
  #     - LANGS
  #     - DOMAIN
  #     - DOMAIN_MEDIA
  #     - DOMAIN_API
  #     - CURRENCY_SYMBOL
  #   depends_on:
  #     - server
