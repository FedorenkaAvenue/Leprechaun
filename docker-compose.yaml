services:

  ### INFRA

  server:
    restart: unless-stopped
    build:
      context: ./infra/server
      dockerfile: Dockerfile
    volumes:
      - ./infra/server/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./infra/server/conf/leprechaun.conf:/etc/nginx/conf.d/leprechaun.conf
      - ./infra/server/conf/leprechaun.dev.conf:/etc/nginx/conf.d/leprechaun.dev.conf
    depends_on:
      - app_admin

  events:
    restart: unless-stopped
    volumes:
      - ./infra/events/rabbitmq.config:/etc/rabbitmq/conf.d/rabbitmq.config
    ports:
      - ${EVENTS_PORT_UI_EXPOSE}:15672

  # s3:
  #   restart: unless-stopped
  #   ports:
  #     - 9001:9001

  # db_main:
  #   restart: unless-stopped
  #   volumes:
  #     - ./db/main/postgresql.conf:/app/postgresql.conf
  #     - ./db/main/pg_hba.conf:/app/pg_hba.conf

  # db_cache:
  #   restart: unless-stopped
  #   volumes:
  #     - ./db/cache/redis.conf:/app/redis.conf

  ### APPS

  app_api:
    restart: unless-stopped
    extends:
      file: docker-compose.shared.yaml
      service: node
    command: npm run dev
    volumes:
      - ./apps/api:/app
      - ./proto:/app/proto
    environment:
      - IS_DEV=true
      - MAIL_SMPT_PORT_DEV
    depends_on:
      - proto_gen
      - mailcatcher

  # api_gateway_ws:
  #   restart: unless-stopped
  #   extends:
  #     file: docker-compose.shared.yaml
  #     service: node
  #   command: npm run dev:ws
  #   volumes:
  #     - ./api/gateways:/app
  #     - /app/apps/private # exclude
  #     - /app/apps/public # exclude
  #   environment:
  #     - IS_DEV=true

  app_admin:
    restart: unless-stopped
    container_name: leprechaun-app-admin
    build:
      context: ./apps/admin
      dockerfile: Dockerfile
    volumes:
      - ./apps/admin:/app
    environment:
      - LANGS
      - VITE_APP_NAME=${APP_NAME}
      - DOMAIN_PUBLIC
      - VITE_DOMAIN_API=${DOMAIN_API}
    networks:
      - server_infra
    depends_on:
      - app_api
      - translations

  app_client:
    restart: unless-stopped
    extends:
      file: docker-compose.shared.yaml
      service: node
    working_dir: /app
    command: yarn dev
    volumes:
      # - client_public_trans_hosting:/app/src/public/locales:rw
      # - ./translations/dist/client_public:/app/src/public/locales
      - ./apps/client:/app
    environment:
      - IS_DEV=true
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    depends_on:
      - translations

  ### SERVICES

  service_auth_client:
    restart: unless-stopped
    extends:
      file: docker-compose.shared.yaml
      service: node
    command: npm run start:dev
    ports:
      - ${AUTH_SERVICE_CLIENT_PORT_EXPOSE}:${AUTH_SERVICE_CLIENT_PORT}
    volumes:
      - ./services/auth/client:/app
      - ./proto:/app/proto
    environment:
      - IS_DEV=true

  service_user_client:
    restart: unless-stopped
    extends:
      file: docker-compose.shared.yaml
      service: node
    command: npm run start:dev
    ports:
      - ${USER_SERVICE_CLIENT_PORT_EXPOSE}:${USER_SERVICE_CLIENT_PORT}
    volumes:
      - ./services/user/client:/app
      - ./proto:/app/proto
    environment:
      - IS_DEV=true

  service_user_db:
    restart: unless-stopped
    ports:
      - ${USER_SERVICE_DB_PORT_EXPOSE}:${USER_SERVICE_DB_PORT}
    volumes:
      - ./services/user/db/postgresql.conf:/app/postgresql.conf
      - ./services/user/db/pg_hba.conf:/app/pg_hba.conf

  service_propgroup_client:
    restart: unless-stopped
    extends:
      file: docker-compose.shared.yaml
      service: node
    command: npm run start:dev
    ports:
      - ${PROPGROUP_SERVICE_CLIENT_PORT_EXPOSE}:${PROPGROUP_SERVICE_CLIENT_PORT}
    volumes:
      - ./services/prop_group/client:/app
      - ./proto:/app/proto
    environment:
      - IS_DEV=true

  service_propgroup_db:
    restart: unless-stopped
    ports:
      - ${PROPGROUP_SERVICE_DB_PORT_EXPOSE}:${PROPGROUP_SERVICE_DB_PORT}
    volumes:
      - ./services/prop_group/db/postgresql.conf:/app/postgresql.conf
      - ./services/prop_group/db/pg_hba.conf:/app/pg_hba.conf

  service_trans_client:
    restart: unless-stopped
    extends:
      file: docker-compose.shared.yaml
      service: node
    command: npm run start:dev
    ports:
      - ${TRANS_SERVICE_CLIENT_PORT_EXPOSE}:${TRANS_SERVICE_CLIENT_PORT}
    volumes:
      - ./services/trans/client:/app
      - ./proto:/app/proto
    environment:
      - IS_DEV=true

  service_trans_db:
    restart: unless-stopped
    ports:
      - ${TRANS_SERVICE_DB_PORT_EXPOSE}:${TRANS_SERVICE_DB_PORT}
    volumes:
      - ./services/trans/db/postgresql.conf:/app/postgresql.conf
      - ./services/trans/db/pg_hba.conf:/app/pg_hba.conf

  service_category_client:
    restart: unless-stopped
    extends:
      file: docker-compose.shared.yaml
      service: node
    command: npm run start:dev
    ports:
      - ${CATEGORY_SERVICE_CLIENT_PORT_EXPOSE}:${CATEGORY_SERVICE_CLIENT_PORT}
    volumes:
      - ./services/category/client:/app
      - ./proto:/app/proto
    environment:
      - IS_DEV=true

  service_category_db:
    restart: unless-stopped
    ports:
      - ${CATEGORY_SERVICE_DB_PORT_EXPOSE}:${CATEGORY_SERVICE_DB_PORT}
    volumes:
      - ./services/category/db/postgresql.conf:/app/postgresql.conf
      - ./services/category/db/pg_hba.conf:/app/pg_hba.conf

  service_category_s3:
    restart: unless-stopped
    volumes:
      - ./services/category/s3/entrypoint.sh:/docker-entrypoint-init.d/entrypoint.sh
    ports:
      - ${CATEGORY_SERVICE_S3_PORT_EXPOSE}:${CATEGORY_SERVICE_S3_PORT}
      - ${CATEGORY_SERVICE_S3_UI_PORT}:${CATEGORY_SERVICE_S3_UI_PORT}

  ### UTILS

  translations:
    restart: unless-stopped
    container_name: leprechaun-utils-translations
    extends:
      file: docker-compose.shared.yaml
      service: node
    command: yarn dev
    volumes:
      - ./utils/translations:/app
    environment:
      - LANGS

  proto_gen:
    restart: unless-stopped
    container_name: leprechaun-utils-protogen
    build:
      context: ./utils/proto_gen
      dockerfile: Dockerfile
    volumes:
      - ./utils/proto_gen:/app
      - ./proto:/app/proto

  mailcatcher:
    container_name: leprechaun-utils-mailcatcher
    image: dockage/mailcatcher:0.9.0
    ports:
      - 1080:1080
