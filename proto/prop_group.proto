syntax = "proto3";

package prop_group;

option go_package = "./prop_group;prop_group_v1";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "trans.proto";

service PropertyGroupService {
    rpc getGroupPrivate (PropertyGroupSearchParams) returns (PropertyGroup);
    rpc getGroupListPrivate (PropertyGroupListSearchParams) returns (PropertyGroupList);
    rpc createGroup (PropertyGroupCU) returns (PropertyGroup);
    rpc updateGroup (PropertyGroupUpdateParams) returns (google.protobuf.Empty);
}

service PropertyService {
    rpc createProperty(PropertyCU) returns (Property);
    rpc deleteProperty(PropertySearchParams) returns (google.protobuf.Empty);
}

message PropertyGroup {
    int32 id = 1;
    trans.TransData title = 2;
    string altName = 3;
    bool isPrimary = 4;
    string comment = 5;
    google.protobuf.Timestamp createdAt = 6;
    google.protobuf.Timestamp updatedAt = 7;
    repeated Property properties = 8;
}

message PropertyGroupPreview {
    int32 id = 1;
    trans.TransData title = 2;
    string altName = 3;
    bool isPrimary = 4;
    string comment = 5;
    google.protobuf.Timestamp createdAt = 6;
    google.protobuf.Timestamp updatedAt = 7;
}

message PropertyGroupCU {
    trans.TransData title = 1;
    string altName = 2;
    bool isPrimary = 3;
    string comment = 4;
}

message Property {
    int32 id = 1;
    trans.TransData title = 2;
    string altName = 3;
    string comment = 4;
    google.protobuf.Timestamp createdAt = 5;
    google.protobuf.Timestamp updatedAt = 6;
}

message PropertyCU {
    trans.TransData title = 1;
    string altName = 2;
    string comment = 3;
    int32 propertyGroup = 4;
}

message PropertyGroupSearchParams {
    int32 id = 1;
}

message PropertyGroupListSearchParams {
    repeated int32 ids = 1;
}

message PropertySearchParams {
    int32 id = 1;
}

message PropertyGroupUpdateParams {
    int32 id = 1;
    PropertyGroupCU data = 2;
}

message PropertyGroupList {
    repeated PropertyGroupPreview items = 1;
}
