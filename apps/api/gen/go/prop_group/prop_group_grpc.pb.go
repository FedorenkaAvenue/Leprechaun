// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.24.4
// source: prop_group.proto

package prop_group_v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	PropertyGroupService_GetPropertyGroupList_FullMethodName = "/prop_group.PropertyGroupService/GetPropertyGroupList"
)

// PropertyGroupServiceClient is the client API for PropertyGroupService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PropertyGroupServiceClient interface {
	GetPropertyGroupList(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*PropertyGroupList, error)
}

type propertyGroupServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPropertyGroupServiceClient(cc grpc.ClientConnInterface) PropertyGroupServiceClient {
	return &propertyGroupServiceClient{cc}
}

func (c *propertyGroupServiceClient) GetPropertyGroupList(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*PropertyGroupList, error) {
	out := new(PropertyGroupList)
	err := c.cc.Invoke(ctx, PropertyGroupService_GetPropertyGroupList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PropertyGroupServiceServer is the server API for PropertyGroupService service.
// All implementations must embed UnimplementedPropertyGroupServiceServer
// for forward compatibility
type PropertyGroupServiceServer interface {
	GetPropertyGroupList(context.Context, *Empty) (*PropertyGroupList, error)
	mustEmbedUnimplementedPropertyGroupServiceServer()
}

// UnimplementedPropertyGroupServiceServer must be embedded to have forward compatible implementations.
type UnimplementedPropertyGroupServiceServer struct {
}

func (UnimplementedPropertyGroupServiceServer) GetPropertyGroupList(context.Context, *Empty) (*PropertyGroupList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPropertyGroupList not implemented")
}
func (UnimplementedPropertyGroupServiceServer) mustEmbedUnimplementedPropertyGroupServiceServer() {}

// UnsafePropertyGroupServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PropertyGroupServiceServer will
// result in compilation errors.
type UnsafePropertyGroupServiceServer interface {
	mustEmbedUnimplementedPropertyGroupServiceServer()
}

func RegisterPropertyGroupServiceServer(s grpc.ServiceRegistrar, srv PropertyGroupServiceServer) {
	s.RegisterService(&PropertyGroupService_ServiceDesc, srv)
}

func _PropertyGroupService_GetPropertyGroupList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PropertyGroupServiceServer).GetPropertyGroupList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PropertyGroupService_GetPropertyGroupList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PropertyGroupServiceServer).GetPropertyGroupList(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

// PropertyGroupService_ServiceDesc is the grpc.ServiceDesc for PropertyGroupService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PropertyGroupService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "prop_group.PropertyGroupService",
	HandlerType: (*PropertyGroupServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPropertyGroupList",
			Handler:    _PropertyGroupService_GetPropertyGroupList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "prop_group.proto",
}
